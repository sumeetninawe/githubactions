# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.5'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
    
    - name: Upload Binary to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
        AWS_DEFAULT_REGION: "eu-central-1"
      run: |
        aws s3 cp ./simplemath s3://${{ secrets.TARGET_BUCKET }}/

    - name: ssh-scp-ssh-pipelines
      # You may pin to the exact commit or the version.
      # uses: cross-the-world/ssh-scp-ssh-pipelines@78e864b4890087a58248ff39320406971ca88b89
      uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
      with:
        # ssh remote host
        host: 18.156.77.48
        # ssh remote user
        user: ec2-user
        # content of ssh private key. ex raw content of ~/.ssh/id_rsa
        key: ${{ secrets.PRIVATE_KEY }}
        # scp from local to remote
        scp: ./simplemath => /home/ec2-user/app/simplemath
        # execute post-commands after scp
        last_ssh: chmod +x /home/ec2-user/app/simplemath && /home/ec2-user/app/simplemath
          
